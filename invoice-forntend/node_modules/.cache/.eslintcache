[{"C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\index.js":"1","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\reportWebVitals.js":"2","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\App.js":"3","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\Pages\\Prescription\\Prescription.js":"4","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\Pages\\invoice\\Invoice.js":"5","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\Pages\\Invoice-patient\\index.js":"6","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\components\\TextFields\\index.js":"7","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\components\\Grid\\index.js":"8"},{"size":500,"mtime":1621449965000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1621449594000,"results":"11","hashOfConfig":"10"},{"size":478,"mtime":1664009049662,"results":"12","hashOfConfig":"10"},{"size":18478,"mtime":1648391965000,"results":"13","hashOfConfig":"10"},{"size":16689,"mtime":1663266190931,"results":"14","hashOfConfig":"10"},{"size":21103,"mtime":1664008738962,"results":"15","hashOfConfig":"10"},{"size":0,"mtime":1664006910523,"results":"16","hashOfConfig":"10"},{"size":875,"mtime":1664007733097,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"pi8jat",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\index.js",[],["38","39"],"C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\reportWebVitals.js",[],"C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\App.js",["40","41","42"],"C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\Pages\\Prescription\\Prescription.js",["43","44","45"],"import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\n\nconst {REACT_APP_SERVER_URL, TRN, CLINIC_ADDRESS, CLINIC_NAME, CLINIC_EMAIL, POWERED_BY} = window.env;\nclass Prescription extends Component {\n  constructor(props) {\n    super(props);\n    this.drugDetailsTemplate = {\n      drugId: 0,\n      drug: '',\n      dosage: '',\n      frequencyId: 0,\n      frequency: '',\n      routeId: 0,\n      route: '',\n      duration: '',\n      instructions: ''\n    };\n    this.state = {\n      dated: new Date().toLocaleString(),\n\t\t\tpatient: {},\n      showPatientList: true,\n      doctor: {},\n      diagnosis: '',\n      patientInstruction: '',\n      routes: [],\n      drugs: [],\n      frequencies: [],\n      drugRows: [],\n      drugDetails: Object.assign({},this.drugDetailsTemplate),\n      showPrintButton: true\n    };\n  }\n\n  isValidId = (id) => {\n    if(!id) {\n      alert('Please enter Patient Id first');\n      return false;\n    }\n    if(isNaN(id)) {\n      alert('Please enter a valid Patient Id');\n      return false;\n    }\n    return true;\n  }\n\n  onInputchange=(event)=> {\n    this.setState({\n      [event.target.name]: parseInt(event.target.value),\n      patient: {}\n    });\n  }\n\n  onPrescriptionInputchange=(event)=> {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    axios.get(REACT_APP_SERVER_URL + 'getPatientsAndDoctors')\n      .then(res => {\n        if(res.data) {\n          if(res.data.doctors && res.data.doctors.length > 0) {\n            this.setState({doctorList : res.data.doctors});\n          } else {\n            alert('No Doctor found.');\n            return;\n          }\n          if(res.data.patients && res.data.patients.length > 0) {\n            this.setState({patientList : res.data.patients});\n          } else {\n            alert('No Patient found.');\n          }\n        } else {\n          alert(\"Backend Service failed to respond\");\n        }\n      }, (error)=> {\n        alert(\"Backend Service failed to respond\");\n        console.log('error : ', error);\n      }\n    );\n  }\n\n  changePatient = (patient)=> {\n    this.setState({patientId : patient.patientcode, patient: patient});\n  }\n\n  showPatientList = (e) => {\n    e.preventDefault();\n    this.setState({\n      showPatientList : true,\n      showInvoiceList: false\n    });\n  }\n\n\tshowPrescriptionTemplate = async() => {\n\t\tconst patientId = this.state.patientId;\n    if(Object.keys(this.state.doctor).length < 1 || this.state.doctor.fullname.length < 1) {\n      alert(\"Please select doctor first.\");\n      return;\n    }\n\t\tif(this.state.patientId && typeof this.state.patientId === 'number' && this.state.patientId > 0) {\n\n      let res = null;\n      res = await\taxios.get(REACT_APP_SERVER_URL + 'getPrescriptionDetails?patientId=' + patientId);\n      if(res.data && res.data.patientDetails && res.data.patientDetails.length > 0) {\n        this.setState({\n          showPatientList : false,\n          patient: res.data.patientDetails[0],\n          drugs: res.data.drugs,\n          routes: res.data.routes,\n          frequencies: res.data.frequencies,\n          drugDetails: Object.assign({},this.drugDetailsTemplate),\n          drugRows: []\n        });\n      } else {\n        alert(\"No Patient exists against this code\");\n      } \n    } else {\n\t\t\talert(\"Patient Code must be a number\");\n\t\t}\n\t\t\n\t}\n\n  validateDrugDetails = () => {\n    let {drugDetails} = this.state;\n    if(drugDetails.drugId < 1 || drugDetails.drug.length < 1 ) {\n      alert('Drug cannot be left blank');\n      return;\n    }\n    if(drugDetails.frequencyId < 1 || drugDetails.frequency.length < 1 ) {\n      alert('Frequency cannot be left blank');\n      return;\n    }\n    if(drugDetails.routeId < 1 || drugDetails.route.length < 1 ) {\n      alert('Route cannot be left blank');\n      return;\n    }\n    if(drugDetails.dosage.length < 1 ) {\n      alert('Dosage cannot be less than 1 or left blank');\n      return;\n    }\n    if(drugDetails.duration.length < 1 ) {\n      alert('Duration cannot be less than 1 or left blank');\n      return;\n    }\n    this.addDrugDetails();\n  }\n\n  addDrugDetails = () => {\n    let drugRows = this.state.drugRows;\n    drugRows.push(Object.assign({},this.state.drugDetails));\n    this.setState({\n      drugRows: drugRows,\n      drugDetails: Object.assign({},this.drugDetailsTemplate),\n      showPrintButton:true\n    });\n  }\n\n  setField = (e, keyName) => {\n    let {drugDetails} = this.state;\n    if(e.target.className === 'form-select') {\n      drugDetails[keyName] = e.target.selectedOptions[0].text;\n      drugDetails[keyName+'Id'] = e.target.value\n    } else{\n      drugDetails[keyName] = e.target.value;\n    }\n    this.setState({ drugDetails: drugDetails });\n  };\n\n  validatePrescription = () => {\n    if(this.state.drugRows.length < 1 ) {\n      alert('Add atleast one drug to generate prescription');\n      return;\n    }\n    if(!this.state.patient || this.state.patient.patientcode < 1 || this.state.patient.patientname.length < 1) {\n      alert('Patient Name or Id cannot cannot be left blank');\n      return;\n    }\n    let axiosConfig = {\n      headers: {\n          'Content-Type': 'application/json'\n      }\n    };\n    let prescription = {\n      patientId: this.state.patient.patientcode,\n      patientName: this.state.patient.patientname,\n      doctor: this.state.doctor.fullname,\n      drCode: this.state.doctor.usercode,\n      drugDetail: this.state.drugRows,\n      diagnosis: this.state.diagnosis,\n      patientInstruction: this.state.patientInstruction\n    }\n    axios.post(REACT_APP_SERVER_URL + 'savePrescription', prescription, axiosConfig)\n    .then((res) => {\n      console.log(\"RESPONSE RECEIVED: \", res);\n      const now = new Date();\n      document.title = JSON.parse(res.config.data)['patientId'] + \"-\" + now.getUTCFullYear().toString() + \"-\" +(now.getUTCMonth() + 1).toString() +\"-\" + now.getUTCDate();\n      this.setState({showPrintButton: false});\n      window.print();\n    })\n    .catch((err) => {\n      console.log(\"AXIOS ERROR: \", err);\n    })\n  }\n\n  getAge = (dateString) => {\n    var birthday = new Date(dateString);\n    return ((Date.now() - birthday) / (31557600000));\n  }\n\n  setDoctor = (name) => {\n    let doctors = this.state.doctorList.filter(function(dr){\n      return name === dr.fullname;\n    });\n    this.setState({doctor: doctors[0]});\n  }\n\n  render() {\n    // const dated = this.state.dated;\n    const patientList = this.state.patientList;\n    // const showPatientList = this.state.showPatientList;\n\t\tconst {patientId, patient, doctor, drugs, routes, frequencies, drugRows, drugDetails, showPatientList, doctorList, showPrintButton} = this.state;\n    const drugList = drugs ? drugs.map((drg, key) => {\n      return(\n        <option key={key} value={drg.drugId} title={drg.formula}>{drg.drugName}</option>\n      )\n    }) : null;\n    const routeList = routes ? routes.map((rt, key) => {\n      return(\n        <option key={key} value={rt.routeId} title={rt.code}>{rt.route}</option>\n      )\n    }) : null;\n    const frequencyList = frequencies ? frequencies.map((fr, key) => {\n      return(\n        <option key={key} value={fr.frequencyId}>{fr.frequency}</option>\n      )\n    }) : null;\n    const doctorListHtml = doctorList ? doctorList.map((dr, key)=> {\n      return(\n        <option key={key} value={dr.fullname}>{dr.fullname}</option>\n      )\n    }) : null;\n    const drugRowsHtml = drugRows.map((drg, key)=>{\n      return(\n        <tr key={key}>\n          <td>{drg.drug}</td>\n          <td>{drg.dosage}</td>\n          <td>{drg.frequency}</td>\n          <td>{drg.route}</td>\n          <td>{drg.duration}</td>\n          <td>{drg.instructions}</td>\n        </tr>\n      )\n    })\n    let patients = patientList ? patientList.map((pat, key) =>{\n      return(\n        <tr key={key}>\n          <td onClick={()=> this.changePatient(pat)} className=\"link\">{pat.patientcode}</td>\n          <td>{pat.patientname}</td>\n          <td>{pat.gender === 'M' ? 'Male' : 'Female'}</td>\n          <td>{pat.dob}</td>\n        </tr>\n      )\n    }) : null;\n\n    return (\n      <div className=\"receipt_box\">\n        <header>\n          <div className=\"logo\">\n            <img src={process.env.PUBLIC_URL + \"/logo.png\"} />\n          </div>\n        </header>\n        <hr/>\n        <div className=\"prescription-tab\">\n          <section className=\"form_section no-print\">\n            {showPatientList ? <h2 className=\"text-center\">Prescription</h2> : null}\n            <input class=\"form-input w-auto\" placeholder=\"Enter Patient Code\" name=\"patientId\" type=\"number\" value={patientId} onChange={(e) => this.onInputchange}/>\n            <select class=\"form-select select-doctor w-auto\" value={doctor.fullname ? doctor.fullname: ''} onChange={(e) => this.setDoctor(e.target.value)}>\n              <option disabled selected value=\"\">Select Doctor</option>\n              {doctorListHtml}\n            </select>\n            <button className=\"btn btn-primary\" onClick={(e)=>this.showPrescriptionTemplate()}>Generate Prescription</button>\n            { showPatientList ?\n                <button className=\"btn btn-primary ml-10\" onClick={(e)=>this.getInvoiceListByPatient(e)}>Get Prescriptions</button>\n                : \n                <button className=\"btn btn-primary ml-10\" onClick={(e)=>this.showPatientList(e)}>Show Patient List</button>\n            }\n          </section>\n          {\n            patients && showPatientList ? \n            (\n              <section className=\"patient-list\">\n                <table className=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th>Patient Id</th>\n                      <th>Patient Name</th>\n                      <th>Gender</th>\n                      <th>DOB</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {patients}\n                  </tbody>\n                </table>\n              </section>\n            ) : ''\n          }\n\t\t\t\t\t{\n\t\t\t\t\t\t!showPatientList ? \n              <>\n                <section className=\"patient_detail\">\n                  <h2 className=\"text-center\">Prescription</h2>\n                  <p className=\"text-center mb-5\"></p>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6 col-md-5\">\n                      <div className=\"row\">\n                        <p className=\"col-sm-4 col-md-4\">Patient:</p>\n                        <span className=\"col-sm-8 col-md-4\">{patient.patientname}</span>\n                      </div>\n                      <div className=\"row\">\n                        <p className=\"col-sm-4 col-md-4\">Doctor:</p>\n                        <span className=\"col-sm-8 col-md-4\">{doctor.fullname ? doctor.fullname : ''}</span>\n                      </div>\n                      <div className=\"row\">\n                        <p className=\"col-sm-4 col-md-4\">DOB:</p>\n                        <span className=\"col-sm-8 col-md-4\">{new Date(patient.dob).toLocaleDateString(\"en-UK\")}</span>\n                      </div>\n                      <div className=\"row\">\n                        <p className=\"col-sm-4 col-md-4\">Email:</p>\n-                       <span className=\"col-sm-8 col-md-4\">{patient.email}</span>\n                      </div>\n                      <div className=\"row\">\n                        <p className=\"col-sm-4 col-md-4\">Mobile No:</p>\n                        <span className=\"col-sm-8 col-md-4\">{patient.mobileno}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6 col-md-4\">\n                      <div className=\"row\">\n                        <p className=\"col-sm-4 col-md-4\">Patient Code:</p>\n                        <span className=\"col-sm-8 col-md-4\">{patient.patientcode}</span>\n                      </div>\n                      <div className=\"row\">\n                        <p className=\"col-sm-4 col-md-4\">Gender:</p>\n                        <span className=\"col-sm-8 col-md-4\">{patient.gender === 'M' ? 'Male' : patient.gender === 'F' ? 'Female' : 'Unknown'}</span>\n                      </div>\n                      <div className=\"row\">\n                        <p className=\"col-sm-4 col-md-4\">Date:</p>\n                        <span className=\"col-sm-8 col-md-4\">{new Date().toLocaleDateString(\"en-UK\")}</span>\n                      </div>\n                      <div className=\"row\">\n                        <p className=\"col-sm-4 col-md-4\">Age:</p>\n                        <span className=\"col-sm-8 col-md-4\">{Math.round(this.getAge(patient.dob))}</span>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n                <hr/>\n                <div className=\"container no-print\">\n                  <h4 className=\"page-title\">Add Drugs</h4> \n                  <div className=\"row execute_container\">\n                    <div className=\"inputGroup col-md-6\">\n                      <label>Drug</label>                  \n                      <select class=\"form-select\" value={drugDetails.drugId > 0 ? drugDetails.drugId : 0} onChange={(e) => this.setField(e, 'drug')}>\n                        <option selected value=\"0\">Select Drug</option>\n                        {drugList}\n                      </select>\n                    </div>\n                    <div className=\"inputGroup col-md-3\">\n                      <label>Dosage</label>\n                      <input\n                        type=\"number\" step=\"any\"\n                        placeholder=\"Quantity\"\n                        value={drugDetails.dosage}\n                        onChange={(e) => this.setField(e, 'dosage')}\n                      />\n                    </div>\n                    <div className=\"inputGroup col-md-3\">\n                      <label>Frequency</label>\n                      <select class=\"form-select\" value={drugDetails.frequencyId > 0 ? drugDetails.frequencyId : 0} onChange={(e) => this.setField(e, 'frequency')}>\n                        <option selected>Select Frequency</option>\n                        {frequencyList}\n                      </select>\n                    </div>\n                    <div className=\"inputGroup col-md-3\" onChange={(e) => this.setField(e, 'route')}>\n                      <label>Route</label>\n                      <select class=\"form-select\" value={drugDetails.routeId > 0 ? drugDetails.routeId : 0} onChange={(e) => this.setField(e, 'route')}>\n                        <option selected>Select Route</option>\n                        {routeList}\n                      </select>\n                    </div>\n                    <div className=\"inputGroup col-md-3\">\n                      <label>Duration</label>\n                      <input\n                        type=\"number\" step=\"any\"\n                        value={drugDetails.duration}\n                        placeholder=\"Days\"\n                        onChange={(e) => this.setField(e, 'duration')}\n                      />\n                    </div>\n                    <div className=\"inputGroup col-md-6\">\n                      <label>Instructions</label>\n                      <textarea class=\"form-control rounded-0\" value={drugDetails.instructions} onChange={(e) => this.setField(e, 'instructions')}></textarea>\n                    </div>\n                    <div className=\"inputGroup offset-md-5 col-md-2 d-flex justify-content-center\">\n                    <button className=\"btn btn-primary ml-10\" onClick={(e)=>this.validateDrugDetails()}>Add</button>\n                    </div>\n                  </div>\n                </div>\n                <section className=\"drug_detail mb-5\">\n                  <table className=\"table table-bordered\">\n                    <thead>\n                      <tr>\n                        <th>Drug</th>\n                        <th>Dosage</th>\n                        <th>Frequency</th>\n                        <th>Route</th>\n                        <th>Duration</th>\n                        <th>Instructions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {drugRowsHtml}\n                    </tbody>\n                  </table>\n                </section>\n                <div className=\"row\">\n                  <div className=\"inputGroup col-sm-4 col-md-4\">\n                    <label>Diagnosis</label>\n                    <input\n                      type=\"text\" name=\"diagnosis\"\n                      value={this.state.diagnosis}\n                      placeholder=\"Diagnosis\"\n                      onChange={this.onPrescriptionInputchange}\n                    />\n                  </div>\n                  <div className=\"inputGroup col-sm-8 col-md-8\">\n                    <label>Patient Instructions</label>\n                    <textarea class=\"form-control rounded-0\" name=\"patientInstruction\" value={this.state.patientInstruction} onChange={this.onPrescriptionInputchange}></textarea>\n                  </div>\n                </div>\n                <hr/>\n                <section className=\"payment_detail mt-5\">\n                  <div className=\"row\">\n                    <p className=\"col-sm-2 col-md-1 text-end\">Provider:</p>\n                    <p className=\"col-sm-4 col-md-3 text-start\" >{doctor.fullname ? doctor.fullname : ''}</p>\n                    <p className=\"col-sm-2 col-md-1 text-end\">Licence No:</p>\n                    <p className=\"col-sm-4 col-md-3 text-start\" >{doctor.licence ? doctor.licence : ''}</p>\n                  </div>\n                </section>\n                <footer>\n                  <span className=\"text-center\">\n                    {CLINIC_NAME}\n                  </span>\n                  <span className=\"text-center\">{CLINIC_ADDRESS}</span>\n                  <span className=\"text-center\">\n                    {CLINIC_EMAIL}\n                  </span>\n                  <span className=\"text-end\">Powered by <b><i>DigiSol Ltd.</i></b></span>\n                </footer>\n                {\n                  showPrintButton ? \n                  <div className=\"row no-print justify-content-center\">\n                    <div className=\"col-sm-2 col-md-2 d-flex justify-content-center\">\n                      <button type=\"button\" className=\"btn btn-primary\" onClick={(e)=>this.validatePrescription()}>Save & Print</button>\n                    </div>\n                  </div> : null\n                }\n              </>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Prescription;","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\Pages\\invoice\\Invoice.js",["46","47"],"import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\n\nconst {REACT_APP_SERVER_URL, TRN, CLINIC_ADDRESS, CLINIC_NAME, CLINIC_EMAIL, CURRENCY, CR} = window.env;\nclass Invoice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dated: new Date().toLocaleString(),\n      patientId: undefined,\n      showPatientList: true\n    };\n  }\n  getInvoices=(e)=> {\n    e.preventDefault();\n    let id = this.state.patientId;\n    if(!this.isValidId(id)) return;\n    axios.get(REACT_APP_SERVER_URL + 'getInvoice?patientId=' + id)\n      .then(res => {\n        console.log('response : ', res);\n        if(res.data) {\n          if(res.data.services.length < 1 ) {\n            alert('No service provided to this patient today');\n            return;\n          }\n          this.setState({\n            'patientDetail' : res.data.patientDetails,\n            'services' : res.data.services,\n            'paymentDetails' : res.data.paymentDetails,\n            'discounts' : res.data.discountsDetails,\n            'showPatientList' : false,\n            'showInvoiceList' : false\n          });\n        } else {\n          alert(\"Backend Service failed to respond\");\n        }\n      }, (error)=> {\n        alert(\"Backend Service failed to respond\");\n        console.log('error : ', error);\n      }\n    )\n  }\n\n  isValidId = (id) => {\n    if(!id) {\n      alert('Please enter Patient Id first');\n      return false;\n    }\n    if(isNaN(id)) {\n      alert('Please enter a valid Patient Id');\n      return false;\n    }\n    return true;\n  }\n\n  getInvoiceListByPatient= (e)=> {\n    e.preventDefault();\n    let id = this.state.patientId;\n    if(!this.isValidId(id)) return;\n    axios.get(REACT_APP_SERVER_URL + 'getInvoiceList?invoicesPerPage=100&patientId=' + id)\n      .then(res => {\n        console.log('response : ', res);\n        if(res.data) {\n          this.setState({\n            'invoiceList' : res.data.invoices,\n            'showPatientList' : false,\n            'showInvoiceList' : true,\n            'patientIdForOldInvoice' : id\n          });\n        } else {\n          alert(\"Backend Service failed to respond\");\n        }\n      }, (error)=> {\n        alert(\"Backend Service failed to respond\");\n        console.log('error : ', error);\n      }\n    )\n  }\n\n  cancelInvoice = (e) => {\n    this.setState({\n      'patientDetail' : null,\n      'services' : null,\n      'paymentDetails' : null,\n      'discounts' : null,\n      'showPatientList' : true\n    });\n  }\n\n  onInputchange=(event)=> {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  regenerateInvoice = (invoiceNo) => {\n    let id = this.state.patientId;\n    if(!this.isValidId(id)) return;\n    // axios.get('http://192.168.1.109:8085/getInvoice?patientId=' + this.state.patientId)\n    axios.get(REACT_APP_SERVER_URL + 'getOldInvoice?invoiceNo=' + invoiceNo + '&patientId=' + this.state.patientIdForOldInvoice)\n      .then(res => {\n        if(res.data) {\n          this.setState({\n            'patientDetail' : res.data.patientDetails,\n            'services' : res.data.services,\n            'paymentDetails' : res.data.paymentDetails,\n            'discounts' : res.data.discountsDetails,\n            'showPatientList' : false,\n            'showInvoiceList' : false\n          });\n        } else {\n          alert(\"Backend Service failed to respond\");\n        }\n      }, (error)=> {\n        alert(\"Backend Service failed to respond\");\n        console.log('error : ', error);\n      }\n    )\n  }\n\n  componentDidMount() {\n    axios.get(REACT_APP_SERVER_URL + 'getPatients')\n      .then(res => {\n        if(res.data) {\n          if(res.data.patients && res.data.patients.length > 0) {\n            this.setState({patientList : res.data.patients});\n          } else {\n            alert('No Patient found.');\n          }\n        } else {\n          alert(\"Backend Service failed to respond\");\n        }\n      }, (error)=> {\n        alert(\"Backend Service failed to respond\");\n        console.log('error : ', error);\n      }\n    );\n  }\n\n  changePatientId = (patientId)=> {\n    this.setState({patientId : patientId});\n  }\n\n  showPatientList = (e) => {\n    e.preventDefault();\n    this.setState({\n      showPatientList : true,\n      showInvoiceList: false\n    });\n  }\n\n  render() {\n    const patientDetail = this.state.patientDetail;\n    const services = this.state.services;\n    const paymentDetails = this.state.paymentDetails;\n    const discounts = this.state.discounts;\n    const dated = this.state.dated;\n    const patientList = this.state.patientList;\n    const showPatientList = this.state.showPatientList;\n    const invoiceList = this.state.invoiceList;\n    const showInvoiceList = this.state.showInvoiceList;\n\n    let cost = {\n      totalCost : 0,\n      totalVat : 0,\n      totalPayment : 0,\n      discount: 0\n    };\n\n    if(discounts && discounts.length > 0) {\n      discounts.forEach(discount => {\n        cost.discount += (discount.amount * (-1));\n      });\n    };\n    let invoices = invoiceList ? invoiceList.map((inv, key) =>{\n      return(\n        <tr key={key}>\n          <td onClick={()=> this.regenerateInvoice(inv.invoicenumber)} className=\"link\">{inv.invoicenumber}</td>\n          <td>{inv.patientcode}</td>\n          <td>{inv.invoicedate}</td>\n        </tr>\n      )\n    }) : null;\n    let patients = patientList ? patientList.map((pat, key) =>{\n      return(\n        <tr key={key}>\n          <td onClick={()=> this.changePatientId(pat.patientcode)} className=\"link\">{pat.patientcode}</td>\n          <td>{pat.patientname}</td>\n          <td>{pat.gender === 'M' ? 'Male' : 'Female'}</td>\n          <td>{pat.dob}</td>\n        </tr>\n      )\n    }) : null;\n    let serviceTable = services && services.length > 0 ? services.map((res) => {\n      cost.totalCost += res.patientcost;\n      cost.totalVat += res.vatamount;\n      return (\n        <tr>\n          <td>{res.username}</td>\n          <td>{res.description}</td>\n          <td style={{textAlign: \"center\"}}>{res.codeid}</td>\n          <td style={{textAlign: \"center\"}}>{res.Tooth}</td>\n          <td style={{textAlign: \"center\"}}>{res.Surface}</td>\n          <td style={{textAlign: \"right\"}}>{res.patientcost.toFixed(2) }</td>\n          <td style={{textAlign: \"center\"}}>{res.vatpercent}</td>\n          <td style={{textAlign: \"right\"}}>{res.vatamount.toFixed(2)}</td>\n          <td style={{textAlign: \"right\"}}>{res.amountwithvat.toFixed(2)}</td>\n        </tr>\n      );\n    }) : null;\n\n    let paymentsSection = paymentDetails && paymentDetails.length > 0 ?\n      paymentDetails.map(payment=> {\n        cost.totalPayment += payment.amount;\n        const amount = payment.amount < 0 ? (payment.amount * (-1)) : payment.amount;\n        const amountDisplay = payment.paymenttypedesc === 'Refund Cash' ?\n          '(' + amount.toFixed(2) + ')' : amount.toFixed(2);\n        return (\n          <div className=\"row\">\n            <p className=\"col-sm-6 col-md-6\">{(payment.paymenttypedesc && payment.paymenttypedesc.length > 0) ? payment.paymenttypedesc : payment.description}</p>\n            <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{amountDisplay}</p>\n          </div>\n        )\n      })\n      : null;\n    \n    const totalPayment = (cost.totalPayment < 0) ? cost.totalPayment*(-1) : cost.totalPayment;\n    cost.netAmount = cost.totalCost - cost.discount;\n    cost.grandTotal = cost.totalCost - cost.discount + cost.totalVat;\n    return (\n      <div className=\"receipt_box\">\n        <header>\n          <div className=\"logo\">\n            <img src={process.env.PUBLIC_URL + \"/logo.png\"} />\n          </div>\n        </header>\n        <hr/>\n        <div className=\"invoice-tab\">\n          {\n            !patientDetail ? (\n            <section className=\"form_section\">\n              <form>\n                <input name=\"patientId\" type=\"text\" placeholder=\"Enter Patient Code\" value={this.state.patientId} onChange={this.onInputchange}/>\n                <button className=\"btn btn-primary\" onClick={(e)=>this.getInvoices(e)}>Generate Invoice</button>\n                { showPatientList ?\n                  <button className=\"btn btn-primary ml-10\" onClick={(e)=>this.getInvoiceListByPatient(e)}>Get Invoices</button>\n                  : \n                  <button className=\"btn btn-primary ml-10\" onClick={(e)=>this.showPatientList(e)}>Show Patient List</button>\n                }\n              </form>\n            </section>\n            ) : null\n          }\n          {invoices && showInvoiceList ? \n            (\n              <section className=\"invoice-list\">\n                <table className=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th>Invoice Number</th>\n                      <th>Patient Code</th>\n                      <th>Invoice Date</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {invoices}\n                  </tbody>\n                </table>\n              </section>\n            ) : ''\n          }\n          {patients && showPatientList ? \n            (\n              <section className=\"patient-list\">\n                <table className=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th>Patient Id</th>\n                      <th>Patient Name</th>\n                      <th>Gender</th>\n                      <th>DOB</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {patients}\n                  </tbody>\n                </table>\n              </section>\n            ) : ''\n          }\n\n          {\n            patientDetail ? (\n              <section className=\"patient_detail\">\n                <h2 className=\"text-center\">Tax Invoice</h2>\n                <p className=\"text-center mb-0\">TRN : {TRN}</p>\n                <p className=\"text-center mb-5\">{CR}</p>\n                <div className=\"row\">\n                  <div className=\"col-sm-5 col-md-5\">\n                    <div className=\"row\">\n                      <p className=\"col-sm-4 col-md-4\">Patient:</p>\n                      <span className=\"col-sm-4 col-md-4\">{patientDetail.patientname}</span>\n                    </div>\n                    <div className=\"row\">\n                      <p className=\"col-sm-4 col-md-4\">Invoice No:</p>\n                      <span className=\"col-sm-4 col-md-4\">{patientDetail.invoicenumber}</span>\n                    </div>\n                    <div className=\"row\">\n                      <p className=\"col-sm-4 col-md-4\">Date:</p>\n                      {/* <span className=\"col-sm-4 col-md-4\">{new Date(services[0].invoicedate).toLocaleDateString(\"en-UK\")}</span> */}\n                      <span className=\"col-sm-4 col-md-4\">{new Date(services[0].dateofservice).toLocaleDateString(\"en-UK\")}</span>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-4 col-md-4\">\n                    <div className=\"row\">\n                      <p className=\"col-sm-4 col-md-4\">Patient Code:</p>\n                      <span className=\"col-sm-4 col-md-4\">{patientDetail.patientcode}</span>\n                    </div>\n                    <div className=\"row\">\n                      <p className=\"col-sm-4 col-md-4\">Gender:</p>\n                      <span className=\"col-sm-4 col-md-4\">{patientDetail.gender === 'M' ? 'Male' : patientDetail.gender === 'F' ? 'Female' : 'Unknown'}</span>\n                    </div>\n                    <div className=\"row\">\n                      <p className=\"col-sm-4 col-md-4\">DOB:</p>\n                      <span className=\"col-sm-4 col-md-4\">{new Date(patientDetail.dob).toLocaleDateString(\"en-UK\")}</span>\n                    </div>\n                  </div>\n                </div>\n              </section> ): null\n          }\n          {\n            serviceTable ? (\n              <section className=\"provider_detail\">\n                <table className=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th>Provider</th>\n                      <th>Service</th>\n                      <th>Code</th>\n                      <th>Tooth</th>\n                      <th>Surface</th>\n                      <th>Amount</th>\n                      <th>VAT%</th>\n                      <th>VAT</th>\n                      <th>Amount With VAT</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {serviceTable}\n                  </tbody>\n                </table>\n              </section>\n            ) : null\n          }\n          {\n            serviceTable ? (\n              <section className=\"payment_detail\">\n                <div className=\"row\">\n                  <div className=\"col-sm-4 col-md-4\">\n                    <p>Payment Mode</p>\n                    {paymentsSection}\n                    <div className=\"row\">\n                      <p className=\"col-sm-6 col-md-6\">Total Payment:</p>\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{totalPayment.toFixed(2)}</p>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2 col-md-2\"></div>\n                  <div className=\"col-sm-4 col-md-4\">\n                    <div className=\"row\">\n                      <p className=\"col-sm-6 col-md-6\">Total:</p>\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{cost.totalCost.toFixed(2)}</p>\n                      <p className=\"col-sm-6 col-md-6\" >Discount:</p>\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{cost.discount.toFixed(2)}</p>\n                      <p className=\"col-sm-6 col-md-6\">Net Amount:</p>\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{cost.netAmount.toFixed(2)}</p>\n                      <p className=\"col-sm-6 col-md-6\">Total VAT:</p>\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{cost.totalVat.toFixed(2)}</p>\n                      <p className=\"col-sm-6 col-md-6\">\n                        <b>Grand Total:</b>\n                      </p>\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>\n                        <b>{cost.grandTotal.toFixed(2)}</b>\n                      </p>\n                      <p className=\"col-sm-6 col-md-6\">\n                        <b>Total Payment:</b>\n                      </p>\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>\n                        <b>{totalPayment.toFixed(2)}</b>\n                      </p>\n                      <p className=\"col-sm-6 col-md-6\">\n                        <b>Invoice Balance:</b>\n                      </p>\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>\n                        <b>{(cost.grandTotal + cost.totalPayment).toFixed(2)}</b>\n                      </p>\n                      <p className=\"col-sm-6 col-md-6\">\n                        <b></b>\n                      </p>\n                      <p className=\"col-sm-6 col-md-6\">\n                        <b></b>\n                      </p>\n                      <p className=\"col-sm-6 col-md-6\">\n                        <b>Patient Balance:</b>\n                      </p>\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>\n                        <b>{parseInt(patientDetail.balance).toFixed(2)}</b>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null\n          }\n          { patientDetail ? (\n            <>\n              <p><b>Note: Currency = {CURRENCY}</b></p>\n              <hr/>\n              <footer>\n                <span className=\"text-center\">\n                  {CLINIC_NAME}\n                </span>\n                <span className=\"text-center\">{CLINIC_ADDRESS}</span>\n                <span className=\"text-center\">\n                  {CLINIC_EMAIL}\n                </span>\n                <span className=\"text-end\">Powered by <b><i>DigiSol Ltd.</i></b></span>\n              </footer>\n              <div className=\"row justify-content-md-center no-print\">\n                <div className=\"col-sm-2 col-md-2\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={(e)=>window.print()}>Print</button>\n                  <button type=\"button\" className=\"btn btn-btn-light\" onClick={(e)=>this.cancelInvoice(e)}>Cancel</button>\n                </div>\n              </div>\n            </>\n            ) : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\nexport default Invoice;","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\Pages\\Invoice-patient\\index.js",["48","49","50","51","52"],"// import React from 'react'\r\n// import RowAndColumnSpacing from '../../components/Grid'\r\n// import BasicTextFields from '../../components/TextFields'\r\n\r\n\r\n// const index = () => {\r\n//     const patient=[{\r\n//         patientCode: 1000002,\r\n//         patientName: \"Loubna Saoud\",\r\n//         registrationDate: \"2020-03-03 11:18:23.390\",\r\n//         appDate: \"2021-10-04 00:00:00.000\",\r\n//         provoder: \"Dr. Firas Hamzeh\",\r\n//     },\r\n//     {\r\n//         patientCode: 1000003,\r\n//         patientName: \"Loubna Saoud\",\r\n//         registrationDate: \"2020-03-03 11:18:23.390\",\r\n//         appDate: \"2021-10-04 00:00:00.000\",\r\n//         provoder: \"Dr. Firas Hamzeh\",\r\n//     },\r\n//     {\r\n//         patientCode: 1000004,\r\n//         patientName: \"Loubna Saoud\",\r\n//         registrationDate: \"2020-03-03 11:18:23.390\",\r\n//         appDate: \"2021-10-04 00:00:00.000\",\r\n//         provoder: \"Dr. Firas Hamzeh\",\r\n//     },\r\n//     {\r\n//         patientCode: 1000005,\r\n//         patientName: \"Loubna Saoud\",\r\n//         registrationDate: \"2020-03-03 11:18:23.390\",\r\n//         appDate: \"2021-10-04 00:00:00.000\",\r\n//         provoder: \"Dr. Firas Hamzeh\",\r\n//     },\r\n// ]\r\n//   return (\r\n//    <RowAndColumnSpacing data={patient} />\r\n//   )\r\n// }\r\n\r\n// export default index\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\n\r\nconst {REACT_APP_SERVER_URL, TRN, CLINIC_ADDRESS, CLINIC_NAME, CLINIC_EMAIL, CURRENCY, CR} = window.env;\r\n     const patient=[{\r\n        patientCode: 1000002,\r\n        patientName: \"Loubna Saoud\",\r\n        registrationDate: \"2020-03-03 11:18:23.390\",\r\n        appDate: \"2021-10-04 00:00:00.000\",\r\n        provoder: \"Dr. Firas Hamzeh\",\r\n    },\r\n    {\r\n        patientCode: 1000003,\r\n        patientName: \"Loubna Saoud\",\r\n        registrationDate: \"2020-03-03 11:18:23.390\",\r\n        appDate: \"2021-10-04 00:00:00.000\",\r\n        provoder: \"Dr. Firas Hamzeh\",\r\n    },\r\n    {\r\n        patientCode: 1000004,\r\n        patientName: \"Loubna Saoud\",\r\n        registrationDate: \"2020-03-03 11:18:23.390\",\r\n        appDate: \"2021-10-04 00:00:00.000\",\r\n        provoder: \"Dr. Firas Hamzeh\",\r\n    },\r\n    {\r\n        patientCode: 1000005,\r\n        patientName: \"Loubna Saoud\",\r\n        registrationDate: \"2020-03-03 11:18:23.390\",\r\n        appDate: \"2021-10-04 00:00:00.000\",\r\n        provoder: \"Dr. Firas Hamzeh\",\r\n    },\r\n]\r\nclass Invoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dated: new Date().toLocaleString(),\r\n      patientId: undefined,\r\n      showPatientList: true\r\n    };\r\n  }\r\n \r\n  getInvoices=(e)=> {\r\n    e.preventDefault();\r\n    let id = this.state.patientId;\r\n    if(!this.isValidId(id)) return;\r\n    axios.get(REACT_APP_SERVER_URL + 'getInvoice?patientId=' + id)\r\n      .then(res => {\r\n        console.log('response : ', res);\r\n        if(res.data) {\r\n          if(res.data.services.length < 1 ) {\r\n            alert('No service provided to this patient today');\r\n            return;\r\n          }\r\n          this.setState({\r\n            'patientDetail' : res.data.patientDetails,\r\n            'services' : res.data.services,\r\n            'paymentDetails' : res.data.paymentDetails,\r\n            'discounts' : res.data.discountsDetails,\r\n            'showPatientList' : false,\r\n            'showInvoiceList' : false\r\n          });\r\n        } else {\r\n        //   alert(\"Backend Service failed to respond\");\r\n        }\r\n      }, (error)=> {\r\n        // alert(\"Backend Service failed to respond\");\r\n        console.log('error : ', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  isValidId = (id) => {\r\n    if(!id) {\r\n      alert('Please enter Patient Id first');\r\n      return false;\r\n    }\r\n    if(isNaN(id)) {\r\n      alert('Please enter a valid Patient Id');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getInvoiceListByPatient= (e)=> {\r\n    e.preventDefault();\r\n    let id = this.state.patientId;\r\n    if(!this.isValidId(id)) return;\r\n    axios.get(REACT_APP_SERVER_URL + 'getInvoiceList?invoicesPerPage=100&patientId=' + id)\r\n      .then(res => {\r\n        console.log('response : ', res);\r\n        if(res.data) {\r\n          this.setState({\r\n            'invoiceList' : res.data.invoices,\r\n            'showPatientList' : false,\r\n            'showInvoiceList' : true,\r\n            'patientIdForOldInvoice' : id\r\n          });\r\n        } else {\r\n        //   alert(\"Backend Service failed to respond\");\r\n        }\r\n      }, (error)=> {\r\n        // alert(\"Backend Service failed to respond\");\r\n        console.log('error : ', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  cancelInvoice = (e) => {\r\n    this.setState({\r\n      'patientDetail' : null,\r\n      'services' : null,\r\n      'paymentDetails' : null,\r\n      'discounts' : null,\r\n      'showPatientList' : true\r\n    });\r\n  }\r\n\r\n  onInputchange=(event)=> {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  regenerateInvoice = (invoiceNo) => {\r\n    let id = this.state.patientId;\r\n    if(!this.isValidId(id)) return;\r\n    // axios.get('http://192.168.1.109:8085/getInvoice?patientId=' + this.state.patientId)\r\n    axios.get(REACT_APP_SERVER_URL + 'getOldInvoice?invoiceNo=' + invoiceNo + '&patientId=' + this.state.patientIdForOldInvoice)\r\n      .then(res => {\r\n        if(res.data) {\r\n          this.setState({\r\n            'patientDetail' : res.data.patientDetails,\r\n            'services' : res.data.services,\r\n            'paymentDetails' : res.data.paymentDetails,\r\n            'discounts' : res.data.discountsDetails,\r\n            'showPatientList' : false,\r\n            'showInvoiceList' : false\r\n          });\r\n        } else {\r\n        //   alert(\"Backend Service failed to respond\");\r\n        }\r\n      }, (error)=> {\r\n        // alert(\"Backend Service failed to respond\");\r\n        console.log('error : ', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(REACT_APP_SERVER_URL + 'getPatients')\r\n      .then(res => {\r\n        if(res.data) {\r\n          if(res.data.patients && res.data.patients.length > 0) {\r\n            this.setState({patientList : res.data.patients});\r\n          } else {\r\n            alert('No Patient found.');\r\n          }\r\n        } else {\r\n        //   alert(\"Backend Service failed to respond\");\r\n        }\r\n      }, (error)=> {\r\n        // alert(\"Backend Service failed to respond\");\r\n        console.log('error : ', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  changePatientId = (patientId)=> {\r\n    this.setState({patientId : patientId});\r\n  }\r\n\r\n  showPatientList = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      showPatientList : true,\r\n      showInvoiceList: false\r\n    });\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const patientDetail = this.state.patientDetail;\r\n    const services = this.state.services;\r\n    const paymentDetails = this.state.paymentDetails;\r\n    const discounts = this.state.discounts;\r\n    const dated = this.state.dated;\r\n    const patientList = this.state.patientList;\r\n    const showPatientList = this.state.showPatientList;\r\n    const invoiceList = this.state.invoiceList;\r\n    const showInvoiceList = this.state.showInvoiceList;\r\n\r\n    const getPatientId = (id) => {\r\n        console.log(id)\r\n    }\r\n\r\n    let cost = {\r\n      totalCost : 0,\r\n      totalVat : 0,\r\n      totalPayment : 0,\r\n      discount: 0\r\n    };\r\n         const patient=[{\r\n        patientCode: 1000002,\r\n        patientName: \"Loubna Saoud\",\r\n        registrationDate: \"2020-03-03 11:18:23.390\",\r\n        appDate: \"2021-10-04 00:00:00.000\",\r\n        provoder: \"Dr. Firas Hamzeh\",\r\n    },\r\n    {\r\n        patientCode: 1000003,\r\n        patientName: \"Loubna Saoud\",\r\n        registrationDate: \"2020-03-03 11:18:23.390\",\r\n        appDate: \"2021-10-04 00:00:00.000\",\r\n        provoder: \"Dr. Firas Hamzeh\",\r\n    },\r\n    {\r\n        patientCode: 1000004,\r\n        patientName: \"Loubna Saoud\",\r\n        registrationDate: \"2020-03-03 11:18:23.390\",\r\n        appDate: \"2021-10-04 00:00:00.000\",\r\n        provoder: \"Dr. Firas Hamzeh\",\r\n    },\r\n    {\r\n        patientCode: 1000005,\r\n        patientName: \"Loubna Saoud\",\r\n        registrationDate: \"2020-03-03 11:18:23.390\",\r\n        appDate: \"2021-10-04 00:00:00.000\",\r\n        provoder: \"Dr. Firas Hamzeh\",\r\n    },\r\n]\r\n\r\n    if(discounts && discounts.length > 0) {\r\n      discounts.forEach(discount => {\r\n        cost.discount += (discount.amount * (-1));\r\n      });\r\n    };\r\n    let invoices = invoiceList ? invoiceList.map((inv, key) =>{\r\n      return(\r\n        <tr key={key}>\r\n          <td onClick={()=> this.regenerateInvoice(inv.invoicenumber)} className=\"link\">{inv.invoicenumber}</td>\r\n          <td>{inv.patientcode}</td>\r\n          <td>{inv.invoicedate}</td>\r\n        </tr>\r\n      )\r\n    }) : null;\r\n    let patients = patientList ? patientList.map((pat, key) =>{\r\n      return(\r\n        <tr key={key}>\r\n          <td onClick={()=> this.changePatientId(pat.patientcode)} className=\"link\">{pat.patientcode}</td>\r\n          <td>{pat.patientname}</td>\r\n          <td>{pat.gender === 'M' ? 'Male' : 'Female'}</td>\r\n          <td>{pat.dob}</td>\r\n        </tr>\r\n      )\r\n    }) : null;\r\n    let serviceTable = services && services.length > 0 ? services.map((res) => {\r\n      cost.totalCost += res.patientcost;\r\n      cost.totalVat += res.vatamount;\r\n      return (\r\n        <tr>\r\n          <td>{res.username}</td>\r\n          <td>{res.description}</td>\r\n          <td style={{textAlign: \"center\"}}>{res.codeid}</td>\r\n          <td style={{textAlign: \"center\"}}>{res.Tooth}</td>\r\n          <td style={{textAlign: \"center\"}}>{res.Surface}</td>\r\n          <td style={{textAlign: \"right\"}}>{res.patientcost.toFixed(2) }</td>\r\n          <td style={{textAlign: \"center\"}}>{res.vatpercent}</td>\r\n          <td style={{textAlign: \"right\"}}>{res.vatamount.toFixed(2)}</td>\r\n          <td style={{textAlign: \"right\"}}>{res.amountwithvat.toFixed(2)}</td>\r\n        </tr>\r\n      );\r\n    }) : null;\r\n\r\n    let paymentsSection = paymentDetails && paymentDetails.length > 0 ?\r\n      paymentDetails.map(payment=> {\r\n        cost.totalPayment += payment.amount;\r\n        const amount = payment.amount < 0 ? (payment.amount * (-1)) : payment.amount;\r\n        const amountDisplay = payment.paymenttypedesc === 'Refund Cash' ?\r\n          '(' + amount.toFixed(2) + ')' : amount.toFixed(2);\r\n        return (\r\n          <div className=\"row\">\r\n            <p className=\"col-sm-6 col-md-6\">{(payment.paymenttypedesc && payment.paymenttypedesc.length > 0) ? payment.paymenttypedesc : payment.description}</p>\r\n            <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{amountDisplay}</p>\r\n          </div>\r\n        )\r\n      })\r\n      : null;\r\n    \r\n    const totalPayment = (cost.totalPayment < 0) ? cost.totalPayment*(-1) : cost.totalPayment;\r\n    cost.netAmount = cost.totalCost - cost.discount;\r\n    cost.grandTotal = cost.totalCost - cost.discount + cost.totalVat;\r\n    return (\r\n      <div className=\"receipt_box\">\r\n        <header>\r\n          <div className=\"logo\">\r\n            <img src={process.env.PUBLIC_URL + \"/logo.png\"} />\r\n          </div>\r\n        </header>\r\n        <hr/>\r\n        <div className=\"invoice-tab\">\r\n          {\r\n            !patientDetail ? (\r\n            <section className=\"form_section\">\r\n              <form>\r\n                <input name=\"patientId\" type=\"text\" placeholder=\"Enter Patient Code\" value={this.state.patientId} onChange={this.onInputchange}/>\r\n                <button className=\"btn btn-primary\" onClick={(e)=>this.getInvoices(e)}>Generate Invoice</button>\r\n                { showPatientList ?\r\n                  <button className=\"btn btn-primary ml-10\" onClick={(e)=>this.getInvoiceListByPatient(e)}>Get Invoices</button>\r\n                  : \r\n                  <button className=\"btn btn-primary ml-10\" onClick={(e)=>this.showPatientList(e)}>Show Patient List</button>\r\n                }\r\n              </form>\r\n            </section>\r\n            ) : null\r\n          }\r\n          {invoices && showInvoiceList ? \r\n            (\r\n              <section className=\"invoice-list\">\r\n                <table className=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Invoice Number</th>\r\n                      <th>Patient Code</th>\r\n                      <th>Invoice Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {invoices}\r\n                  </tbody>\r\n                </table>\r\n              </section>\r\n            ) : ''\r\n          }\r\n          {true || patients && showPatientList ? \r\n            (\r\n              <section className=\"patient-list\">\r\n                <table className=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Patient Id</th>\r\n                      <th>Patient Name</th>\r\n                      <th>Gender</th>\r\n                      <th>DOB</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {patients}\r\n                  </tbody>\r\n                </table>\r\n              </section>\r\n            ) : ''\r\n          }\r\n          {\r\n            patient.map((data)=>{\r\n                return(\r\n                    <section className=\"patient-list\">\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th onClick={() => getPatientId(data?.patientCode)}>{data.patientCode}</th>\r\n                          <th>{data?.patientName}</th>\r\n                          <th>Gender</th>\r\n                          <th>DOB</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {patients}\r\n                      </tbody>\r\n                    </table>\r\n                  </section>\r\n                )\r\n            })\r\n          }\r\n\r\n          {\r\n            patientDetail ? (\r\n              <section className=\"patient_detail\">\r\n                <h2 className=\"text-center\">Tax Invoice</h2>\r\n                <p className=\"text-center mb-0\">TRN : {TRN}</p>\r\n                <p className=\"text-center mb-5\">{CR}</p>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-5 col-md-5\">\r\n                    <div className=\"row\">\r\n                      <p className=\"col-sm-4 col-md-4\">Patient:</p>\r\n                      <span className=\"col-sm-4 col-md-4\">{patientDetail.patientname}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <p className=\"col-sm-4 col-md-4\">Invoice No:</p>\r\n                      <span className=\"col-sm-4 col-md-4\">{patientDetail.invoicenumber}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <p className=\"col-sm-4 col-md-4\">Date:</p>\r\n                      {/* <span className=\"col-sm-4 col-md-4\">{new Date(services[0].invoicedate).toLocaleDateString(\"en-UK\")}</span> */}\r\n                      <span className=\"col-sm-4 col-md-4\">{new Date(services[0].dateofservice).toLocaleDateString(\"en-UK\")}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-4 col-md-4\">\r\n                    <div className=\"row\">\r\n                      <p className=\"col-sm-4 col-md-4\">Patient Code:</p>\r\n                      <span className=\"col-sm-4 col-md-4\">{patientDetail.patientcode}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <p className=\"col-sm-4 col-md-4\">Gender:</p>\r\n                      <span className=\"col-sm-4 col-md-4\">{patientDetail.gender === 'M' ? 'Male' : patientDetail.gender === 'F' ? 'Female' : 'Unknown'}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <p className=\"col-sm-4 col-md-4\">DOB:</p>\r\n                      <span className=\"col-sm-4 col-md-4\">{new Date(patientDetail.dob).toLocaleDateString(\"en-UK\")}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section> ): null\r\n          }\r\n          {\r\n            serviceTable ? (\r\n              <section className=\"provider_detail\">\r\n                <table className=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Provider</th>\r\n                      <th>Service</th>\r\n                      <th>Code</th>\r\n                      <th>Tooth</th>\r\n                      <th>Surface</th>\r\n                      <th>Amount</th>\r\n                      <th>VAT%</th>\r\n                      <th>VAT</th>\r\n                      <th>Amount With VAT</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {serviceTable}\r\n                  </tbody>\r\n                </table>\r\n              </section>\r\n            ) : null\r\n          }\r\n          {\r\n            serviceTable ? (\r\n              <section className=\"payment_detail\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4 col-md-4\">\r\n                    <p>Payment Mode</p>\r\n                    {paymentsSection}\r\n                    <div className=\"row\">\r\n                      <p className=\"col-sm-6 col-md-6\">Total Payment:</p>\r\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{totalPayment.toFixed(2)}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-2 col-md-2\"></div>\r\n                  <div className=\"col-sm-4 col-md-4\">\r\n                    <div className=\"row\">\r\n                      <p className=\"col-sm-6 col-md-6\">Total:</p>\r\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{cost.totalCost.toFixed(2)}</p>\r\n                      <p className=\"col-sm-6 col-md-6\" >Discount:</p>\r\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{cost.discount.toFixed(2)}</p>\r\n                      <p className=\"col-sm-6 col-md-6\">Net Amount:</p>\r\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{cost.netAmount.toFixed(2)}</p>\r\n                      <p className=\"col-sm-6 col-md-6\">Total VAT:</p>\r\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>{cost.totalVat.toFixed(2)}</p>\r\n                      <p className=\"col-sm-6 col-md-6\">\r\n                        <b>Grand Total:</b>\r\n                      </p>\r\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>\r\n                        <b>{cost.grandTotal.toFixed(2)}</b>\r\n                      </p>\r\n                      <p className=\"col-sm-6 col-md-6\">\r\n                        <b>Total Payment:</b>\r\n                      </p>\r\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>\r\n                        <b>{totalPayment.toFixed(2)}</b>\r\n                      </p>\r\n                      <p className=\"col-sm-6 col-md-6\">\r\n                        <b>Invoice Balance:</b>\r\n                      </p>\r\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>\r\n                        <b>{(cost.grandTotal + cost.totalPayment).toFixed(2)}</b>\r\n                      </p>\r\n                      <p className=\"col-sm-6 col-md-6\">\r\n                        <b></b>\r\n                      </p>\r\n                      <p className=\"col-sm-6 col-md-6\">\r\n                        <b></b>\r\n                      </p>\r\n                      <p className=\"col-sm-6 col-md-6\">\r\n                        <b>Patient Balance:</b>\r\n                      </p>\r\n                      <p className=\"col-sm-6 col-md-6\" style={{textAlign: \"right\"}}>\r\n                        <b>{parseInt(patientDetail.balance).toFixed(2)}</b>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            ) : null\r\n          }\r\n          { patientDetail ? (\r\n            <>\r\n              <p><b>Note: Currency = {CURRENCY}</b></p>\r\n              <hr/>\r\n              <footer>\r\n                <span className=\"text-center\">\r\n                  {CLINIC_NAME}\r\n                </span>\r\n                <span className=\"text-center\">{CLINIC_ADDRESS}</span>\r\n                <span className=\"text-center\">\r\n                  {CLINIC_EMAIL}\r\n                </span>\r\n                <span className=\"text-end\">Powered by <b><i>DigiSol Ltd.</i></b></span>\r\n              </footer>\r\n              <div className=\"row justify-content-md-center no-print\">\r\n                <div className=\"col-sm-2 col-md-2\">\r\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={(e)=>window.print()}>Print</button>\r\n                  <button type=\"button\" className=\"btn btn-btn-light\" onClick={(e)=>this.cancelInvoice(e)}>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Invoice;","C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\components\\TextFields\\index.js",[],"C:\\Users\\Ammad\\Desktop\\in\\invoice-forntend\\src\\components\\Grid\\index.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":15},{"ruleId":"57","severity":1,"message":"61","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":20},{"ruleId":"62","severity":1,"message":"63","line":10,"column":3,"nodeType":"64","messageId":"65","endLine":12,"endColumn":4},{"ruleId":"57","severity":1,"message":"66","line":5,"column":30,"nodeType":"59","messageId":"60","endLine":5,"endColumn":33},{"ruleId":"57","severity":1,"message":"67","line":5,"column":78,"nodeType":"59","messageId":"60","endLine":5,"endColumn":88},{"ruleId":"68","severity":1,"message":"69","line":273,"column":13,"nodeType":"70","endLine":273,"endColumn":63},{"ruleId":"57","severity":1,"message":"71","line":158,"column":11,"nodeType":"59","messageId":"60","endLine":158,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":235,"column":13,"nodeType":"70","endLine":235,"endColumn":63},{"ruleId":"57","severity":1,"message":"72","line":48,"column":12,"nodeType":"59","messageId":"60","endLine":48,"endColumn":19},{"ruleId":"57","severity":1,"message":"71","line":231,"column":11,"nodeType":"59","messageId":"60","endLine":231,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":341,"column":13,"nodeType":"70","endLine":341,"endColumn":63},{"ruleId":"73","severity":1,"message":"74","line":379,"column":17,"nodeType":"75","messageId":"76","endLine":379,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":379,"column":29,"nodeType":"75","messageId":"76","endLine":379,"endColumn":31},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Invoice' is defined but never used.","Identifier","unusedVar","'Prescription' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'TRN' is assigned a value but never used.","'POWERED_BY' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dated' is assigned a value but never used.","'patient' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]